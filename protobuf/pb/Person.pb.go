// Code generated by protoc-gen-go.
// source: Person.proto
// DO NOT EDIT!

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	Person.proto

It has these top-level messages:
	Person
	PhoneNumber
	User
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// enum为关键字，作用为定义一种枚举类型
type PhoneType int32

const (
	PhoneType_MOBILE PhoneType = 0
	PhoneType_HOME   PhoneType = 1
	PhoneType_WORK   PhoneType = 2
)

var PhoneType_name = map[int32]string{
	0: "MOBILE",
	1: "HOME",
	2: "WORK",
}
var PhoneType_value = map[string]int32{
	"MOBILE": 0,
	"HOME":   1,
	"WORK":   2,
}

func (x PhoneType) String() string {
	return proto.EnumName(PhoneType_name, int32(x))
}
func (PhoneType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type TypeCard int32

const (
	TypeCard_INVALID        TypeCard = 0
	TypeCard_COMMON         TypeCard = 11
	TypeCard_SAMPLE_COLOR   TypeCard = 12
	TypeCard_FLUSH          TypeCard = 13
	TypeCard_THREE          TypeCard = 14
	TypeCard_STRAIGHT_FLUSH TypeCard = 15
	TypeCard_LEOPARD        TypeCard = 16
)

var TypeCard_name = map[int32]string{
	0:  "INVALID",
	11: "COMMON",
	12: "SAMPLE_COLOR",
	13: "FLUSH",
	14: "THREE",
	15: "STRAIGHT_FLUSH",
	16: "LEOPARD",
}
var TypeCard_value = map[string]int32{
	"INVALID":        0,
	"COMMON":         11,
	"SAMPLE_COLOR":   12,
	"FLUSH":          13,
	"THREE":          14,
	"STRAIGHT_FLUSH": 15,
	"LEOPARD":        16,
}

func (x TypeCard) String() string {
	return proto.EnumName(TypeCard_name, int32(x))
}
func (TypeCard) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// message为关键字，作用为定义一种消息类型
type Person struct {
	Name   string         `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Age    int32          `protobuf:"varint,2,opt,name=age" json:"age,omitempty"`
	Emails []string       `protobuf:"bytes,3,rep,name=emails" json:"emails,omitempty"`
	Phones []*PhoneNumber `protobuf:"bytes,4,rep,name=phones" json:"phones,omitempty"`
}

func (m *Person) Reset()                    { *m = Person{} }
func (m *Person) String() string            { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()               {}
func (*Person) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Person) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Person) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *Person) GetEmails() []string {
	if m != nil {
		return m.Emails
	}
	return nil
}

func (m *Person) GetPhones() []*PhoneNumber {
	if m != nil {
		return m.Phones
	}
	return nil
}

// message为关键字，作用为定义一种消息类型可以被另外的消息类型嵌套使用
type PhoneNumber struct {
	Number string    `protobuf:"bytes,1,opt,name=number" json:"number,omitempty"`
	Type   PhoneType `protobuf:"varint,2,opt,name=type,enum=pb.PhoneType" json:"type,omitempty"`
}

func (m *PhoneNumber) Reset()                    { *m = PhoneNumber{} }
func (m *PhoneNumber) String() string            { return proto.CompactTextString(m) }
func (*PhoneNumber) ProtoMessage()               {}
func (*PhoneNumber) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PhoneNumber) GetNumber() string {
	if m != nil {
		return m.Number
	}
	return ""
}

func (m *PhoneNumber) GetType() PhoneType {
	if m != nil {
		return m.Type
	}
	return PhoneType_MOBILE
}

type User struct {
	Mid   int32   `protobuf:"varint,1,opt,name=mid" json:"mid,omitempty"`
	Money int32   `protobuf:"varint,2,opt,name=money" json:"money,omitempty"`
	Sex   int32   `protobuf:"varint,3,opt,name=sex" json:"sex,omitempty"`
	Sicon string  `protobuf:"bytes,4,opt,name=sicon" json:"sicon,omitempty"`
	Vip   int32   `protobuf:"varint,5,opt,name=vip" json:"vip,omitempty"`
	Props []int32 `protobuf:"varint,6,rep,packed,name=props" json:"props,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *User) GetMid() int32 {
	if m != nil {
		return m.Mid
	}
	return 0
}

func (m *User) GetMoney() int32 {
	if m != nil {
		return m.Money
	}
	return 0
}

func (m *User) GetSex() int32 {
	if m != nil {
		return m.Sex
	}
	return 0
}

func (m *User) GetSicon() string {
	if m != nil {
		return m.Sicon
	}
	return ""
}

func (m *User) GetVip() int32 {
	if m != nil {
		return m.Vip
	}
	return 0
}

func (m *User) GetProps() []int32 {
	if m != nil {
		return m.Props
	}
	return nil
}

func init() {
	proto.RegisterType((*Person)(nil), "pb.Person")
	proto.RegisterType((*PhoneNumber)(nil), "pb.PhoneNumber")
	proto.RegisterType((*User)(nil), "pb.User")
	proto.RegisterEnum("pb.PhoneType", PhoneType_name, PhoneType_value)
	proto.RegisterEnum("pb.TypeCard", TypeCard_name, TypeCard_value)
}

func init() { proto.RegisterFile("Person.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 359 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x4c, 0x91, 0x4d, 0xcf, 0x93, 0x40,
	0x14, 0x85, 0x5f, 0xca, 0x87, 0x2f, 0x97, 0x7e, 0x4c, 0x26, 0xc6, 0xcc, 0x12, 0xbb, 0x91, 0xd4,
	0xa4, 0x8b, 0xfa, 0x0b, 0xb0, 0x45, 0x21, 0x42, 0x87, 0x4c, 0xa9, 0x2e, 0x1b, 0xb0, 0x13, 0x25,
	0x29, 0xcc, 0x84, 0xa9, 0x4d, 0xbb, 0xf1, 0xb7, 0x9b, 0x01, 0xd2, 0xb8, 0x3b, 0xe7, 0xde, 0x67,
	0xce, 0x3d, 0xc9, 0xc0, 0x34, 0xe7, 0x9d, 0x12, 0xed, 0x5a, 0x76, 0xe2, 0x2a, 0xf0, 0x44, 0x56,
	0x4b, 0x01, 0xce, 0x30, 0xc3, 0x18, 0xac, 0xb6, 0x6c, 0x38, 0x31, 0x7c, 0x23, 0x70, 0x59, 0xaf,
	0x31, 0x02, 0xb3, 0xfc, 0xc5, 0xc9, 0xc4, 0x37, 0x02, 0x9b, 0x69, 0x89, 0xdf, 0x81, 0xc3, 0x9b,
	0xb2, 0xbe, 0x28, 0x62, 0xfa, 0x66, 0xe0, 0xb2, 0xd1, 0xe1, 0x0f, 0xe0, 0xc8, 0xdf, 0xa2, 0xe5,
	0x8a, 0x58, 0xbe, 0x19, 0x78, 0x9b, 0xc5, 0x5a, 0x56, 0xeb, 0x5c, 0x4f, 0xf6, 0x7f, 0x9a, 0x8a,
	0x77, 0x6c, 0x5c, 0x2f, 0x63, 0xf0, 0xfe, 0x1b, 0xeb, 0xbc, 0xb6, 0x57, 0xe3, 0xdd, 0xd1, 0xe1,
	0xf7, 0x60, 0x5d, 0x1f, 0x72, 0x38, 0x3d, 0xdf, 0xcc, 0x9e, 0x69, 0xc5, 0x43, 0x72, 0xd6, 0xaf,
	0x96, 0x7f, 0xc1, 0x3a, 0x2a, 0xde, 0xe9, 0x92, 0x4d, 0x7d, 0xee, 0xdf, 0xdb, 0x4c, 0x4b, 0xfc,
	0x16, 0xec, 0x46, 0xb4, 0xfc, 0x31, 0x16, 0x1f, 0x8c, 0xe6, 0x14, 0xbf, 0x13, 0x73, 0xe0, 0x14,
	0xbf, 0x6b, 0x4e, 0xd5, 0x3f, 0x45, 0x4b, 0xac, 0xfe, 0xf6, 0x60, 0x34, 0x77, 0xab, 0x25, 0xb1,
	0x07, 0xee, 0x56, 0x4b, 0xcd, 0xc9, 0x4e, 0x48, 0x45, 0x1c, 0xdf, 0xd4, 0x79, 0xbd, 0x59, 0x7d,
	0x04, 0xf7, 0x59, 0x09, 0x03, 0x38, 0x19, 0xfd, 0x9c, 0xa4, 0x11, 0x7a, 0xc1, 0xaf, 0x60, 0xc5,
	0x34, 0x8b, 0x90, 0xa1, 0xd5, 0x0f, 0xca, 0xbe, 0xa1, 0xc9, 0xea, 0x02, 0xaf, 0x9a, 0xdb, 0x96,
	0xdd, 0x19, 0x7b, 0xf0, 0x26, 0xd9, 0x7f, 0x0f, 0xd3, 0x64, 0x87, 0x5e, 0xf4, 0xc3, 0x2d, 0xcd,
	0x32, 0xba, 0x47, 0x1e, 0x46, 0x30, 0x3d, 0x84, 0x59, 0x9e, 0x46, 0xa7, 0x2d, 0x4d, 0x29, 0x43,
	0x53, 0xec, 0x82, 0xfd, 0x25, 0x3d, 0x1e, 0x62, 0x34, 0xd3, 0xb2, 0x88, 0x59, 0x14, 0xa1, 0x39,
	0xc6, 0x30, 0x3f, 0x14, 0x2c, 0x4c, 0xbe, 0xc6, 0xc5, 0x69, 0x58, 0x2f, 0x74, 0x68, 0x1a, 0xd1,
	0x3c, 0x64, 0x3b, 0x84, 0x2a, 0xa7, 0xff, 0xe0, 0x4f, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0x5c,
	0x80, 0x69, 0x30, 0xf0, 0x01, 0x00, 0x00,
}
